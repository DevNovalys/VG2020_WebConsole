/*Now the CSS*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Open Sans", Arial, Helvetica, Sans-Serif;
    font-size: 13px;
}

.VgworkflowTree ul {
    padding-top: 40px;
    position: relative;
    /* background: #fff; */
    z-index: 2;
    display: flex;
    /* flex-direction: column; */
    /* overflow: hidden; */
}

.VgworkflowTree li {
    /* float: left; */
    text-align: center;
    z-index: 1;
    list-style-type: none;
    position: relative;
    padding: 20px 5px 0 5px;
    margin: 0 auto;
    /* display: inline-block; */
    vertical-align: top;
    padding-bottom: 30px;
    width: 97.5%;
    background: #fff;
}

    /*We will use ::before and ::after to draw the connectors*/

    .VgworkflowTree li::before,
    .VgworkflowTree li::after {
        content: '';
        position: absolute;
        top: 0;
        right: 49.9%;
        border-top: 1px solid #ccc;
        width: 50%;
        height: 100%;
        border-bottom: 1px solid #d1d1d1;
    }

    .VgworkflowTree li::after {
        right: auto;
        left: 49.9%;
        border-left: 1px solid #ccc;
    }


    /*We need to remove left-right connectors from elements without
any siblings*/
    .VgworkflowTree li:only-child::after,
    .VgworkflowTree li:only-child::before {
        display: none;
    }

    /*Remove space from the top of single children*/
    .VgworkflowTree li:only-child {
        padding-top: 0;
    }

    /*Remove left connector from first child and
right connector from last child*/
    .VgworkflowTree li:first-child::before,
    .VgworkflowTree li:last-child::after {
        border: 0 none;
    }

    /*Adding back the vertical connector to the last nodes*/
    .VgworkflowTree li:last-child::before {
        border-right: 1px solid #ccc;
        border-radius: 0 5px 5px 0;
    }

    .VgworkflowTree li:first-child::after {
        border-radius: 5px 0 0 5px;
        /* height: 70%; */
    }

/*Time to add downward connectors from parents*/
.VgworkflowTree ul .insert-component::after {
    content: '';
    position: absolute;
    top: 0;
    left: 49.99%;
    border-left: 1px solid #ccc;
    width: 1px;
    height: 55px;
    z-index: -1;
}

.VgworkflowTree ul ul::before {
    content: '';
    position: absolute;
    top: -7px;
    left: 49.99%;
    border-left: 1px solid #ccc;
    width: 1px;
    height: 55px;
    z-index: -1;
}

.VgworkflowTree li a {
    border: 1px solid #ccc;
    padding: 5px 10px;
    text-decoration: none;
    color: #fff;
    font-family: arial, verdana, tahoma;
    display: inline-block;
    background: #0072c6;
    z-index: 2;
    position: relative;
    max-width: 150px;
    border-radius: 5px;
    min-width: 75px;
}

.insert-component {
    height: 29px;
    position: absolute;
    left: 0;
    right: 0;
    max-width: 80px;
    width: 100%;
    margin: 0 auto;
    bottom: -30px;
    z-index: 3;
}

/*send email node*/
.VgworkflowTree > ul > li > ul.send-email {
    padding-top: 0;
    z-index: 3;
    padding-bottom: 10px;
}

.VgworkflowTree .send-email {
    padding-top: 9px;
}

.VgworkflowTree ul ul .send-email {
    padding-top: 9px !important;
}

.VgworkflowTree .send-email::before {
    content: none
}

.VgworkflowTree .only-send-email {
    padding-bottom: 10px;
    padding-top: 20px;
}

    .VgworkflowTree .only-send-email li {
        padding-bottom: 0;
    }

    .VgworkflowTree .only-send-email::before {
        content: '';
        height: 100%;
        top: 0;
        bottom: 0;
    }

    .VgworkflowTree .only-send-email .send-email-node .insert-component {
        display: none;
    }

/* .VgworkflowTree .send-email li {
    padding-bottom: 0
} */

.insert-component.start {
    border: none
}

.start::before {
    background: #008000;
}

.end::before {
    background: #ff0000;
}

.dot::before {
    content: "";
    height: 25px;
    width: 25px;
    border-radius: 50%;
    z-index: 3;
    display: block;
    margin: 0 auto;
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: 50%;
    margin-top: -8px;
}

.grey::before {
    background: #f1f1f1;
    border: 1px solid #dddddd;
}

/*starting css*/
.VgworkflowTree .starting {
    padding: 0 0 44px 0;
}

    .VgworkflowTree .starting .insert-component {
        height: 36px;
        bottom: -37px;
    }

        .VgworkflowTree .starting .insert-component::after {
            height: 44px;
        }

    .VgworkflowTree .starting li {
        padding-bottom: 0
    }

    .VgworkflowTree .starting:before {
        content: none
    }


/*Time for some hover effects*/
/*We will apply the hover effect the the lineage of the element also*/
.VgworkflowTree li a:hover,
.VgworkflowTree li a:hover + ul li a {
    background: #c8e4f8;
    color: #000;
    border: 1px solid #94a0b4;
}

    /*Connector styles on hover*/
    .VgworkflowTree li a:hover + ul li::after,
    .VgworkflowTree li a:hover + ul li::before,
    .VgworkflowTree li a:hover + ul::before,
    .VgworkflowTree li a:hover + ul ul::before {
        border-color: #94a0b4;
    }

/* .VgworkflowTree>ul>li:first-child>ul>li>ul>li>ul>li>ul {

    margin-top: 25px;

    background: #fff;
    position: relative;    
    z-index: 2;
} */

.dotted-line {
    border: 1px dotted #d1d1d1;
}

.dotted-line-padding {
    padding-bottom: 75px;
    margin-top: 7px;
}

/*.no-dotted-line:after {
    border: none !important
}*/



.d-none {
    display: none !important;
}

/*Diamond css*/
.diamond-shape {
    height: 70px;
    margin-top: 19px;
    text-align: center;
    transform: rotate(47deg);
    width: 70px !important;
}

.condition-line {
    display: table-cell;
    height: 100%;
    transform: rotate(-45deg);
    vertical-align: top;
    height: 70px;
    width: 70px !important;
}


/* .VgworkflowTree li:last-child > a .insert-component{
    margin-left: -1px;
} */

.diamond-shape .delete-node {
    transform: rotate(0deg);
}

/*close icon*/
.delete-node {
    position: absolute;
    right: 32px;
    top: -30px;
    padding: 7px;
    width: 14px;
    height: 14px;
    background: #000;
    border-radius: 50%;
    transform: rotate(45deg);
}

    .delete-node:hover {
        opacity: 1;
    }

    .delete-node:before,
    .delete-node:after {
        position: absolute;
        left: 6px;
        content: ' ';
        height: 7px;
        width: 2px;
        background-color: #fff;
        top: 3px;
    }

    .delete-node:before {
        transform: rotate(45deg);
    }

    .delete-node:after {
        transform: rotate(-45deg);
    }


/*last node*/
ul.last ul:after {
    content: "";
    background: #d1d1d1;
    height: 1px;
    width: 52%;
    position: absolute;
    bottom: 7px;
    left: 0;
    right: 0;
    margin: 0 auto;
}

ul.last .end-node {
    position: relative;
    top: -25px;
    bottom: 0;
}

.end-node-content {
    position: relative;
    width: 100%;
    height: 26px;
}

ul.last .end-node:before {
    content: "";
    /* background: #d1d1d1; */
    height: 1px;
    width: 250%;
    left: -69%;
    position: absolute;
    right: -100%;
    z-index: 1;
}

.VgworkflowTree ul.last ul li div {
    border: 1px dotted #d1d1d1;
    width: auto;
    display: inline-block;
    padding: 5px 30px;
}

.VgworkflowTree ul.last:after {
    content: '';
    position: absolute;
    top: -14px;
    left: 50%;
    border-left: 1px solid #ccc;
    width: 1px;
    height: 28px;
}

.end-node {
    position: relative;
    margin-top: 69px;
}

    .end-node .insert-component {
        top: -35px;
        bottom: inherit;
    }

        .end-node .insert-component.end {
            border: none;
        }

.VgworkflowTree ul .end-node .insert-component::after {
    height: 35px;
}

.end-node .grey {
    top: -69px;
    border: none
}

.no-node::before {
    content: none
}

/*if condition css*/
.set-condition {
    padding-bottom: 0 !important
}

.VgworkflowTree li.set-condition a {
    background: rgba(34, 136, 214, 1);
    z-index: 3;
}

    .VgworkflowTree li.set-condition a.end-node {
        margin-top: 0;
        position: absolute;
        left: 50%;
        margin-left: -38px;
        bottom: -15px;
        z-index: 3;
    }

        .VgworkflowTree li.set-condition a.end-node .insert-component {
            top: 32px;
            border: none;
        }

            .VgworkflowTree li.set-condition a.end-node .insert-component::after {
                top: -7px;
                height: 28px;
            }

.VgworkflowTree .send-email-node {
    background: rgba(34, 136, 214, 1);
}

    .VgworkflowTree .send-email-node:hover,
    .VgworkflowTree .send-email-node:focus {
        background: rgba(109, 180, 234, 1);
        color: #000;
        border: 1px solid #2288d6;
    }

.VgworkflowTree li.set-condition a:hover,
.VgworkflowTree li.set-condition a:hover + ul li a {
    background: rgba(109, 180, 234, 1);
    color: #000;
    border: 1px solid #2288d6;
}

.set-condition-node {
    position: absolute;
    height: 45px;
    max-width: 80px;
    margin: 0 auto;
    left: 0;
    right: 0;
    top: -39px;
}

    .set-condition-node .insert-component {
        top: 1px;
        border: none
    }

/*common classes*/
ul.if-condition,
ul.Switch-case {
    z-index: 1;
    margin-bottom: -1px;
}

/* Styles for  "For Loop" */
/* reset code */
.dotted-line-padding {
    padding-bottom: 1px;
}

/* .VgworkflowTree>ul>li:first-child>ul>li>ul>li>ul>li>ul {
    margin-bottom: 55px;
} */

.VgworkflowTree li.set-condition a.end-node {
    bottom: 20px;
}

.VgworkflowTree ul .insert-component.dot-end:before {
    top: 110%;
}

.VgworkflowTree a.action-node {
    position: relative;
}

    .VgworkflowTree a.action-node .delete-node {
        top: -7px;
        right: -5px;
    }

        .VgworkflowTree a.action-node .delete-node:before {
            -webkit-transform: rotate(0deg);
            -moz-transform: rotate(0deg);
            -ms-transform: rotate(0deg);
            -o-transform: rotate(0deg);
            transform: rotate(0deg);
        }

        .VgworkflowTree a.action-node .delete-node:after {
            -webkit-transform: rotate(90deg);
            -moz-transform: rotate(90deg);
            -ms-transform: rotate(90deg);
            -o-transform: rotate(90deg);
            transform: rotate(90deg);
        }

/* reset code */
.oval-shape {
    height: 50px !important;
    width: 80px !important;
    background-color: #0072c6;
    border-radius: 50% !important;
    display: inline-block;
    text-align: center;
    line-height: 40px;
}

    .oval-shape span.label {
        font-family: arial, verdana, tahoma;
        font-size: 13px;
        color: #fff;
        display: inline-block;
    }

.for-loop .for-loop-line {
    display: table-cell;
    height: 100%;
    transform: rotate(-45deg);
    vertical-align: top;
    height: 60px;
    width: 70px !important;
    vertical-align: middle;
}

    .for-loop .for-loop-line .delete-node {
        right: 17px;
    }

.for-loop > li > ul {
    margin-bottom: 20px;
    padding-top: 20px;
}

.for-loop .diamond-shape {
    z-index: 3 !important;
}

.for-loop .root-node:after {
    content: '' !important;
    position: absolute;
    top: 55px;
    right: 50%;
    height: -webkit-calc(100% - 55px);
    height: -moz-calc(100% - 55px);
    height: calc(100% - 55px);
    width: calc(50% - 5px);
    border-top: 1px solid #ccc !important;
    border-bottom: 1px solid #d1d1d1 !important;
    border-right: 1px solid #d1d1d1 !important;
    display: inline-block !important;
    border-radius: 0px 5px 5px 0 !important;
}

.for-loop .loop-iteration-list {
    padding: 0 0px 20px;
    padding-left: 1px;
    padding-right: 1px;
}

    .for-loop .loop-iteration-list > li {
        padding-left: 0;
        padding-right: 0;
    }

    .for-loop .loop-iteration-list:before {
        content: '' !important;
        position: absolute;
        top: -14px;
        left: 0;
        right: 0;
        border-left: 1px solid #ccc !important;
        width: 1px;
        height: 75px;
        display: inline-block;
        z-index: 2;
        margin: auto;
    }
/* 
.for-loop .loop-iteration-list:after {
    content: "" !important;
    background-color: #f1f1f1;
    border: 1px solid #dddddd;
    height: 25px;
    width: 25px;
    border-radius: 50%;
    z-index: 1;
    display: inline-block !important;
    margin: 0 auto;
    position: absolute;
    left: 0;
    right: 0;
    top: 29px;
    z-index: 2;
} */

.for-loop .root-node .diamond-shape .dot {
    transform: rotate(-47deg);
    left: 63px;
    top: 77px;
}

    .for-loop .root-node .diamond-shape .dot:after {
        display: none;
    }

.for-loop .loop-iteration-list .group-statement {
    position: relative;
    padding: 0;
    min-height: 50px;
}

    .for-loop .loop-iteration-list .group-statement:before {
        content: '' !important;
        display: inline-block !important;
        position: absolute;
        top: 25px;
        left: 10px;
        border-top: 1px dotted #ccc;
        width: -webkit-calc(50% - 10px);
        width: -moz-calc(50% - 10px);
        width: calc(50% - 10px);
        height: -webkit-calc(100% - 12px);
        height: -moz-calc(100% - 12px);
        height: calc(100% - 12px);
        border-left: 1px dotted #d1d1d1;
        border-right: 0;
        border-bottom: 1px dotted #d1d1d1;
        border-radius: 0;
        background-color: #ffffff;
    }

    .for-loop .loop-iteration-list .group-statement:after {
        content: '' !important;
        display: inline-block !important;
        position: absolute;
        top: 25px;
        right: 10px;
        border-top: 1px dotted #ccc;
        width: -webkit-calc(50% - 10px);
        width: -moz-calc(50% - 10px);
        width: calc(50% - 10px);
        height: -webkit-calc(100% - 12px);
        height: -moz-calc(100% - 12px);
        height: calc(100% - 12px);
        border-right: 1px dotted #d1d1d1;
        border-left: 0;
        border-bottom: 1px dotted #d1d1d1;
        border-radius: 0;
        background-color: #ffffff;
    }

.for-loop .iterative-statement {
    padding-top: 40px;
    margin-bottom: 0;
    display: flex;
    flex-direction: column;
    background-color: transparent;
}

    .for-loop .iterative-statement:first-child {
        padding-top: 60px;
    }

    .for-loop .iterative-statement:not(:first-child) {
        padding-top: 13px;
    }

    .for-loop .iterative-statement > li {
        background-color: transparent;
        padding-bottom: 0px;
    }

    /* .for-loop .iterative-statement>li>ul>li>ul {
    margin-top: 25px;
    margin-bottom: 50px;
    position: relative;
} */

    .for-loop .iterative-statement ul.statement-list:before {
        border-left: 0;
    }

    .for-loop .iterative-statement:before {
        content: '' !important;
        position: absolute;
        top: -42px;
        left: 0;
        height: -webkit-calc(100% + 42px);
        height: -moz-calc(100% + 42px);
        height: calc(100% + 42px);
        border-top: 1px solid #ccc;
        border-left: 1px solid #ccc;
        width: 50%;
        display: inline-block;
        border-radius: 5px 0 0 0px;
        left: 0;
    }

    .for-loop .iterative-statement:last-child > li {
        padding-bottom: 35px;
    }

    .for-loop .iterative-statement:last-child:before {
        height: -webkit-calc(100% + 82px);
        height: -moz-calc(100% + 82px);
        height: calc(100% + 82px);
        border-right: 1px solid #ccc;
        border-bottom: 1px solid #ccc;
        border-radius: 0px 0 0 5px;
    }

    .for-loop .iterative-statement:not(:first-child):before {
        border-top: 0;
        top: 0%;
        height: -webkit-calc(100% + 42px);
        height: -moz-calc(100% + 42px);
        height: calc(100% + 42px);
        border-radius: 0 0 5px 5px;
    }

.for-loop .statement-node {
    position: relative;
    padding-left: 15px;
    padding-right: 15px;
}

.for-loop .right-arrow-icon {
    width: 0;
    height: 0;
    border-top: 5px solid transparent;
    border-left: 10px solid #555;
    border-bottom: 5px solid transparent;
    position: absolute;
    left: -9px;
    top: 66px;
    transform: rotate(-47deg);
}

.for-loop .diamond-shape {
    position: relative;
}

.for-loop .end-node {
    bottom: -25px !important;
    position: absolute;
    left: 0;
    right: 0;
    margin: 69px auto 0;
    width: 25px;
}

    .for-loop .end-node .dot-end:before {
        top: 30px;
        bottom: inherit;
    }

.for-loop .left-arrow-icon {
    width: 0;
    height: 0;
    border-top: 5px solid transparent;
    border-right: 10px solid #555;
    border-bottom: 5px solid transparent;
    position: absolute;
    right: -10px;
    top: 8px;
}

.for-loop .root-node .end-node .insert-component.dot-end::after {
    height: 82px;
}

.for-loop .statement-node .statement-node {
    padding-left: 0;
    padding-right: 0;
}

.for-loop .send-email .send-email-node {
    min-width: auto;
}

.for-loop .Switch-case .Switch-case:before {
    display: none;
}

.for-loop .Switch-case .Switch-case .end-node {
    bottom: -54px !important;
}

.for-loop .iterative-statement:last-child:before {
    left: -1px;
}

/* switch case styles */
.Switch-case .group-case {
    width: 100%;
    display: inline-block;
    padding: 15px 0 25px;
    background-color: transparent;
    position: relative;
}

    .Switch-case .group-case:before {
        content: "";
        display: inline-block;
        border: 1px dotted #cccccc;
        border-right: 0;
        width: 50%;
        min-height: 40px;
        height: calc(100% - 30px);
        position: absolute;
        left: 0;
        top: 48px;
    }

    .Switch-case .group-case:after {
        content: "";
        display: inline-block;
        border: 1px dotted #cccccc;
        border-left: 0;
        width: 50%;
        min-height: 40px;
        height: calc(100% - 30px);
        position: absolute;
        right: 0;
        top: 48px;
    }

    .Switch-case .group-case .group-case-statement {
        background-color: transparent;
        width: auto;
        padding: 0;
    }

        .Switch-case .group-case .group-case-statement > ul,
        .Switch-case .group-case .group-case-statement > ul > li {
            background-color: transparent;
        }

.VgworkflowTree ul .end-node .insert-component::after {
    height: 69px;
}

.VgworkflowTree ul .end-node .insert-component::before {
    margin-top: 0;
}

.VgworkflowTree ul .ending.end-node {
    margin-top: 88px;
}

    .VgworkflowTree ul .ending.end-node > .insert-component {
        top: -87px;
    }

        .VgworkflowTree ul .ending.end-node > .insert-component::before {
            margin-top: -8px;
        }

        .VgworkflowTree ul .ending.end-node > .insert-component::after {
            height: 50px;
        }

    .VgworkflowTree ul .ending.end-node > a > .insert-component {
        top: -50px;
    }

        .VgworkflowTree ul .ending.end-node > a > .insert-component::after {
            height: 50px;
        }

.condition-case > a > .insert-component:before {
    margin-top: 0;
}


.m-t-13 {
    margin-top: 13px !important;
}

.m-b-13 {
    margin-bottom: 13px !important;
}

.m-t-14 {
    margin-top: 14px !important;
}

.m-b-14 {
    margin-bottom: 14px !important;
}

.m-t-15 {
    margin-top: 15px !important;
}

.m-b-15 {
    margin-bottom: 15px !important;
}

.m-b-0 {
    margin-bottom: 0 !important;
}

.p-t-20 {
    padding-top: 20px !important;
}

.p-b-20 {
    padding-bottom: 20px !important;
}

.p-b-15 {
    padding-bottom: 15px !important;
}

.p-b-14 {
    padding-bottom: 14px !important;
}

.p-b-13 {
    padding-bottom: 13px !important;
}

.p-b-12 {
    padding-bottom: 12px !important;
}

.p-b-10 {
    padding-bottom: 10px !important;
}

.p-t-40 {
    padding-top: 40px !important;
}

.p-t-20 {
    padding-top: 20px !important;
}

.p-t-15 {
    padding-top: 15px !important;
}

.p-t-10 {
    padding-top: 10px !important;
}

.p-t-0 {
    padding-top: 0px !important;
}

.p-b-0 {
    padding-bottom: 0px !important;
}

.for-loop .Switch-case::before {
    height: 65px;
    top: -19px;
}

.VgworkflowTree .dot-up-psend-email {
    padding-top: 42px;
}

    .VgworkflowTree .dot-up-psend-email > li {
        padding-bottom: 0;
    }

        .VgworkflowTree .dot-up-psend-email > li .send-email-node .insert-component {
            bottom: 43px;
        }

.VgworkflowTree .line-58 .send-email-node .insert-component::after {
    height: 58px;
}

.VgworkflowTree ul .ending.end-node.only-end-node {
    margin-top: 50px;
}

.blank-dot {
    min-height: 50px;
    position: relative;
}

    .blank-dot .insert-dot {
        height: 100%;
        position: unset;
        display: block;
        width: 100%;
        max-width: 80px;
        margin: 0 auto;
        bottom: -32px;
        z-index: 3;
    }

    .blank-dot .dot::before {
        margin-top: -13px;
    }

    .blank-dot .dot-line::after {
        content: '';
        position: absolute;
        top: 0;
        left: 49.99%;
        border-left: 1px solid #ccc;
        width: 1px;
        height: 60px;
        z-index: -1;
    }

.smart-form .VgworkflowTree * {
    box-sizing: border-box;
}

/* .if-condition ul li:last-child .insert-component:after{
    display: none;
} */


.for-loop .blank-dot {
    margin-left: -2px;
}
/*=======================================================================================*/
#tabNodes * {
    box-sizing: border-box
}

/*body {
    font-family: "Lato", sans-serif;
}*/

/* Style the tab */
#tabNodes .tab {
    float: left;
    border: 1px solid #ccc;
    background-color: #f1f1f1;
    width: 30%;
    height: 300px;
}

    /* Style the buttons inside the tab */
    #tabNodes .tab button {
        display: block;
        background-color: inherit;
        /*color: black;*/
        padding: 10px 16px;
        width: 100%;
        border: none;
        outline: none;
        text-align: left;
        cursor: pointer;
        transition: 0.3s;
        /*font-size: 17px;*/
    }

    /* Change background color of buttons on hover */
    #tabNodes .tab p:hover {
        background-color: #ddd;
    }

    /* Create an active/current "tab button" class */
    #tabNodes .tab p.active {
        background-color: #ccc;
    }

/* Style the tab content */
#tabNodes .tabcontent {
    float: left;
    padding: 31px 12px;
    border: 1px solid #ccc;
    width: 70%;
    border-left: none;
    height: 300px;
}

#tabNodes span > input {
    background: none;
    border: 0;
    padding: 0;
}

#tabNodes .tab > p {
    padding: 2px 15px;
}